--------------------------------------
some config:
data_dir = ./data
output_dir = ./output
embedding_path = ./embedding/hlbl-embeddings-scaled.EMBEDDING_SIZE=50.txt
word_dim = 50
model_name = CNN
mode = 1
seed = 5782
cuda = -1
epoch = 20
dropout = 0.5
batch_size = 128
lr = 0.001
max_len = 100
pos_dis = 50
pos_dim = 5
hidden_size = 100
filter_num = 200
window = 3
L2_decay = 1e-05
device = cpu
model_dir = ./output/CNN
--------------------------------------
start to load data ...
finish!
--------------------------------------
CNN(
  (word_embedding): Embedding(246123, 50)
  (pos1_embedding): Embedding(103, 5)
  (pos2_embedding): Embedding(103, 5)
  (conv): Conv2d(1, 200, kernel_size=(3, 60), stride=(1, 1), padding=(1, 0))
  (maxpool): MaxPool2d(kernel_size=(100, 1), stride=(100, 1), padding=0, dilation=1, ceil_mode=False)
  (tanh): Tanh()
  (dropout): Dropout(p=0.5, inplace=False)
  (linear): Linear(in_features=200, out_features=100, bias=True)
  (dense): Linear(in_features=100, out_features=19, bias=True)
)
traning model parameters:
word_embedding.weight :  torch.Size([246123, 50])
pos1_embedding.weight :  torch.Size([103, 5])
pos2_embedding.weight :  torch.Size([103, 5])
conv.weight :  torch.Size([200, 1, 3, 60])
conv.bias :  torch.Size([200])
linear.weight :  torch.Size([100, 200])
linear.bias :  torch.Size([100])
dense.weight :  torch.Size([19, 100])
dense.bias :  torch.Size([19])
--------------------------------------
start to train the model ...
[001] train_loss: 1.057 | dev_loss: 1.059 | micro f1 on dev: 0.0000 >>> save models!
[002] train_loss: 0.422 | dev_loss: 0.417 | micro f1 on dev: 0.0000 
[003] train_loss: 0.395 | dev_loss: 0.385 | micro f1 on dev: 0.0000 
[004] train_loss: 0.292 | dev_loss: 0.279 | micro f1 on dev: 0.0000 
[005] train_loss: 0.291 | dev_loss: 0.277 | micro f1 on dev: 0.0000 
[006] train_loss: 0.272 | dev_loss: 0.262 | micro f1 on dev: 0.0000 
[007] train_loss: 0.271 | dev_loss: 0.265 | micro f1 on dev: 0.0000 
[008] train_loss: 0.258 | dev_loss: 0.255 | micro f1 on dev: 0.0000 
[009] train_loss: 0.250 | dev_loss: 0.250 | micro f1 on dev: 0.0000 
[010] train_loss: 0.241 | dev_loss: 0.244 | micro f1 on dev: 0.0000 
[011] train_loss: 0.229 | dev_loss: 0.236 | micro f1 on dev: 0.0000 
[012] train_loss: 0.209 | dev_loss: 0.223 | micro f1 on dev: 0.0000 
[013] train_loss: 0.185 | dev_loss: 0.206 | micro f1 on dev: 0.0000 
[014] train_loss: 0.157 | dev_loss: 0.186 | micro f1 on dev: 0.0465 >>> save models!
[015] train_loss: 0.127 | dev_loss: 0.165 | micro f1 on dev: 0.3137 >>> save models!
[016] train_loss: 0.103 | dev_loss: 0.151 | micro f1 on dev: 0.4848 >>> save models!
[017] train_loss: 0.084 | dev_loss: 0.145 | micro f1 on dev: 0.4776 
[018] train_loss: 0.069 | dev_loss: 0.145 | micro f1 on dev: 0.5278 >>> save models!
[019] train_loss: 0.059 | dev_loss: 0.147 | micro f1 on dev: 0.5195 
[020] train_loss: 0.047 | dev_loss: 0.151 | micro f1 on dev: 0.5000 
--------------------------------------
start test ...
test_loss: 0.145 | micro f1 on test:  0.5278
